#kind: Deployment
#apiVersion: apps/v1
#metadata:
#  name: widget-app-event-listener
#  namespace: widgety-pipelines
#  ownerReferences:
#    - apiVersion: triggers.tekton.dev/v1beta1
#      kind: EventListener
#      name: widget-app-event-listener
#      controller: true
#      blockOwnerDeletion: true
#  labels:
#    app.kubernetes.io/managed-by: EventListener
#    app.kubernetes.io/part-of: Triggers
#    eventlistener: widget-app-event-listener
#spec:
#  replicas: 1
#  selector:
#    matchLabels:
#      app.kubernetes.io/managed-by: EventListener
#      app.kubernetes.io/part-of: Triggers
#      eventlistener: widget-app-event-listener
#  template:
#    metadata:
#      creationTimestamp: null
#      labels:
#        app.kubernetes.io/managed-by: EventListener
#        app.kubernetes.io/part-of: Triggers
#        eventlistener: widget-app-event-listener
#    spec:
#      containers:
#        - resources: {}
#          readinessProbe:
#            httpGet:
#              path: /live
#              port: 8080
#              scheme: HTTP
#            timeoutSeconds: 1
#            periodSeconds: 10
#            successThreshold: 1
#            failureThreshold: 3
#          terminationMessagePath: /dev/termination-log
#          name: event-listener
#          livenessProbe:
#            httpGet:
#              path: /live
#              port: 8080
#              scheme: HTTP
#            timeoutSeconds: 1
#            periodSeconds: 10
#            successThreshold: 1
#            failureThreshold: 3
#          env:
#            - name: K_LOGGING_CONFIG
#              value: '{"zap-logger-config":"{\n  \"level\": \"info\",\n  \"development\": false,\n  \"disableStacktrace\": true,\n  \"sampling\": {\n    \"initial\": 100,\n    \"thereafter\": 100\n  },\n  \"outputPaths\": [\"stdout\"],\n  \"errorOutputPaths\": [\"stderr\"],\n  \"encoding\": \"json\",\n  \"encoderConfig\": {\n    \"timeKey\": \"timestamp\",\n    \"levelKey\": \"severity\",\n    \"nameKey\": \"logger\",\n    \"callerKey\": \"caller\",\n    \"messageKey\": \"message\",\n    \"stacktraceKey\": \"stacktrace\",\n    \"lineEnding\": \"\",\n    \"levelEncoder\": \"\",\n    \"timeEncoder\": \"iso8601\",\n    \"durationEncoder\": \"\",\n    \"callerEncoder\": \"\"\n  }\n}\n"}'
#            - name: K_METRICS_CONFIG
#              value: '{"Domain":"tekton.dev/triggers","Component":"eventlistener","PrometheusPort":0,"PrometheusHost":"","ConfigMap":{}}'
#            - name: K_TRACING_CONFIG
#              value: '{"backend":"none","debug":"false","sample-rate":"0.1"}'
#            - name: NAMESPACE
#              value: widget-app
#            - name: NAME
#              value: widget-app-event-listener
#            - name: EL_EVENT
#              value: enable
#            - name: K_SINK_TIMEOUT
#              value: '30'
#            - name: SYSTEM_NAMESPACE
#              valueFrom:
#                fieldRef:
#                  apiVersion: v1
#                  fieldPath: metadata.namespace
#            - name: METRICS_PROMETHEUS_PORT
#              value: '9000'
#          securityContext:
#            capabilities:
#              drop:
#                - ALL
#            runAsNonRoot: true
#            readOnlyRootFilesystem: true
#            allowPrivilegeEscalation: false
#            seccompProfile:
#              type: RuntimeDefault
#          ports:
#            - containerPort: 8080
#              protocol: TCP
#            - containerPort: 9000
#              protocol: TCP
#          imagePullPolicy: IfNotPresent
#          terminationMessagePolicy: File
#          image: 'registry.redhat.io/openshift-pipelines/pipelines-triggers-eventlistenersink-rhel8@sha256:d2a64d19af76fdf4ee30a4e216865ea8da260393f4f6e859427b5f935a75e752'
#          args:
#            - '--el-name=widget-app-event-listener'
#            - '--el-namespace=widgety-pipelines'
#            - '--port=8080'
#            - '--readtimeout=5'
#            - '--writetimeout=40'
#            - '--idletimeout=120'
#            - '--timeouthandler=30'
#            - '--httpclient-readtimeout=30'
#            - '--httpclient-keep-alive=30'
#            - '--httpclient-tlshandshaketimeout=10'
#            - '--httpclient-responseheadertimeout=10'
#            - '--httpclient-expectcontinuetimeout=1'
#            - '--is-multi-ns=false'
#            - '--payload-validation=true'
#            - '--cloudevent-uri='
#            - '--tls-cert='
#            - '--tls-key='
#      restartPolicy: Always
#      terminationGracePeriodSeconds: 30
#      dnsPolicy: ClusterFirst
#      serviceAccountName: pipeline
#      serviceAccount: pipeline
#      securityContext:
#        runAsNonRoot: true
#        seccompProfile:
#          type: RuntimeDefault
#      schedulerName: default-scheduler
#  strategy:
#    type: RollingUpdate
#    rollingUpdate:
#      maxUnavailable: 25%
#      maxSurge: 25%
#  revisionHistoryLimit: 10
#  progressDeadlineSeconds: 600
